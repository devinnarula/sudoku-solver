{"ast":null,"code":"var _jsxFileName = \"/Users/devinnarula/Documents/GitHub/sudoku-solver/sudoku-solver/src/pages/Solver/solver.js\";\nimport React from 'react';\nimport { SolverContainer, Title, Grid, Cell, SolveBtn, SolverMiddle, SolverButtons, ClearBtn, TimeLabel, Time, TimeContainer } from './SolverElements';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Solver extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.solve = () => {\n      fetch(`http://127.0.0.1:5000/solve`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          grid: this.state.grid\n        })\n      }).then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n      }).then(data => this.setState({\n        grid: data.grid,\n        time: data.time\n      }));\n    };\n\n    this.handleCellChange = (r, c) => e => {\n      var newgrid = this.state.grid;\n      console.log(newgrid);\n      if (e.target.value) newgrid[r][c] = parseInt(e.target.value);else newgrid[r][c] = 0;\n      this.setState({\n        grid: newgrid\n      });\n    };\n\n    this.handleClear = () => {\n      this.setState({\n        grid: [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]]\n      });\n    };\n\n    this.handleReset = () => {\n      this.setState({\n        grid: [[0, 0, 0, 0, 0, 0, 6, 8, 0], [0, 0, 0, 0, 7, 3, 0, 0, 9], [3, 0, 9, 0, 0, 0, 0, 4, 5], [4, 9, 0, 0, 0, 0, 0, 0, 0], [8, 0, 3, 0, 5, 0, 9, 0, 2], [0, 0, 0, 0, 0, 0, 0, 3, 6], [9, 6, 0, 0, 0, 0, 3, 0, 8], [7, 0, 0, 6, 8, 0, 0, 0, 0], [0, 2, 8, 0, 0, 0, 0, 0, 0]]\n      });\n    };\n\n    this.state = {\n      grid: [[0, 0, 0, 0, 0, 0, 6, 8, 0], [0, 0, 0, 0, 7, 3, 0, 0, 9], [3, 0, 9, 0, 0, 0, 0, 4, 5], [4, 9, 0, 0, 0, 0, 0, 0, 0], [8, 0, 3, 0, 5, 0, 9, 0, 2], [0, 0, 0, 0, 0, 0, 0, 3, 6], [9, 6, 0, 0, 0, 0, 3, 0, 8], [7, 0, 0, 6, 8, 0, 0, 0, 0], [0, 2, 8, 0, 0, 0, 0, 0, 0]],\n      time: 0\n    };\n    this.handleCellChange = this.handleCellChange.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(SolverContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Sudoku Solver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SolverMiddle, {\n        children: [/*#__PURE__*/_jsxDEV(SolverButtons, {\n          children: [/*#__PURE__*/_jsxDEV(ClearBtn, {\n            onClick: this.handleClear,\n            children: \"Clear Board\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ClearBtn, {\n            onClick: this.handleReset,\n            children: \"Reset Board\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: this.state.grid.map((row, r) => row.map((num, c) => /*#__PURE__*/_jsxDEV(Cell, {\n            id: `${r * this.state.grid.length + c}`,\n            type: \"text\",\n            value: this.state.grid[r][c] != 0 ? this.state.grid[r][c].toString() : \"\",\n            onChange: this.handleCellChange(r, c)\n          }, r * this.state.grid.length + c, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 33\n          }, this)))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SolverButtons, {\n          children: [/*#__PURE__*/_jsxDEV(ClearBtn, {\n            onClick: this.solve,\n            children: \"Solve\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TimeContainer, {\n            children: [/*#__PURE__*/_jsxDEV(TimeLabel, {\n              children: \"Solve Time:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Time, {\n              children: [this.state.time != 0 ? this.state.time : \"--\", \" seconds\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Solver;","map":{"version":3,"sources":["/Users/devinnarula/Documents/GitHub/sudoku-solver/sudoku-solver/src/pages/Solver/solver.js"],"names":["React","SolverContainer","Title","Grid","Cell","SolveBtn","SolverMiddle","SolverButtons","ClearBtn","TimeLabel","Time","TimeContainer","Solver","Component","constructor","props","solve","fetch","method","headers","body","JSON","stringify","grid","state","then","response","ok","json","data","setState","time","handleCellChange","r","c","e","newgrid","console","log","target","value","parseInt","handleClear","handleReset","bind","render","map","row","num","length","toString"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { SolverContainer, Title, Grid, Cell, SolveBtn, SolverMiddle, SolverButtons, ClearBtn, TimeLabel, Time, TimeContainer } from './SolverElements'\n\nclass Solver extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            grid: [\n            [0, 0, 0, 0, 0, 0, 6, 8, 0],\n            [0, 0, 0, 0, 7, 3, 0, 0, 9],\n            [3, 0, 9, 0, 0, 0, 0, 4, 5],\n            [4, 9, 0, 0, 0, 0, 0, 0, 0],\n            [8, 0, 3, 0, 5, 0, 9, 0, 2],\n            [0, 0, 0, 0, 0, 0, 0, 3, 6],\n            [9, 6, 0, 0, 0, 0, 3, 0, 8],\n            [7, 0, 0, 6, 8, 0, 0, 0, 0],\n            [0, 2, 8, 0, 0, 0, 0, 0, 0]\n            ],\n            time: 0\n        };\n        this.handleCellChange = this.handleCellChange.bind(this);\n      }\n    \n    solve = () => {\n        fetch(`http://127.0.0.1:5000/solve`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({grid: this.state.grid})\n        }).then(response => {\n            if(response.ok){\n                return response.json()\n            }\n        }).then(data => this.setState({grid: data.grid, time: data.time}))\n    }\n\n    handleCellChange = (r,c) => (e) => {\n        var newgrid = this.state.grid;\n        console.log(newgrid)\n        if(e.target.value)\n            newgrid[r][c] = parseInt(e.target.value)\n        else\n            newgrid[r][c] = 0\n        this.setState({grid: newgrid})\n    }\n\n    handleClear = () => {\n        this.setState({grid: [\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0]\n        ]})\n    }\n\n    handleReset = () => {\n        this.setState({grid: [\n            [0, 0, 0, 0, 0, 0, 6, 8, 0],\n            [0, 0, 0, 0, 7, 3, 0, 0, 9],\n            [3, 0, 9, 0, 0, 0, 0, 4, 5],\n            [4, 9, 0, 0, 0, 0, 0, 0, 0],\n            [8, 0, 3, 0, 5, 0, 9, 0, 2],\n            [0, 0, 0, 0, 0, 0, 0, 3, 6],\n            [9, 6, 0, 0, 0, 0, 3, 0, 8],\n            [7, 0, 0, 6, 8, 0, 0, 0, 0],\n            [0, 2, 8, 0, 0, 0, 0, 0, 0]\n        ]})\n    }\n\n    render() {\n        return (\n            <SolverContainer>\n                <Title>Sudoku Solver</Title>\n                <SolverMiddle>\n                    <SolverButtons>\n                        <ClearBtn onClick={this.handleClear}>Clear Board</ClearBtn>\n                        <ClearBtn onClick={this.handleReset}>Reset Board</ClearBtn>\n                    </SolverButtons>\n                    <Grid>\n                        {this.state.grid.map((row, r) => (\n                            row.map((num, c) => (\n                                <Cell id={`${(r*this.state.grid.length)+c}`} type=\"text\" value={this.state.grid[r][c]!=0 ? this.state.grid[r][c].toString() : \"\"} key={(r*this.state.grid.length)+c} onChange={this.handleCellChange(r,c)}/>\n                            ))\n                        ))}\n                    </Grid>\n                    <SolverButtons>\n                    <ClearBtn onClick={this.solve}>Solve</ClearBtn>\n                    <TimeContainer>\n                        <TimeLabel>Solve Time:</TimeLabel>\n                        <Time>{this.state.time != 0 ? this.state.time : \"--\"} seconds</Time>\n                    </TimeContainer>\n                    </SolverButtons>\n                </SolverMiddle>\n            </SolverContainer>\n        )\n    }\n}\n\nexport default Solver\n"]},"metadata":{},"sourceType":"module"}