{"ast":null,"code":"var _jsxFileName = \"/Users/devinnarula/Documents/GitHub/sudoku-solver/sudoku-solver/src/pages/Solver/solver.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Solver = () => {\n  let board = grid = [[0, 0, 0, 0, 0, 0, 6, 8, 0], [0, 0, 0, 0, 7, 3, 0, 0, 9], [3, 0, 9, 0, 0, 0, 0, 4, 5], [4, 9, 0, 0, 0, 0, 0, 0, 0], [8, 0, 3, 0, 5, 0, 9, 0, 2], [0, 0, 0, 0, 0, 0, 0, 3, 6], [9, 6, 0, 0, 0, 0, 3, 0, 8], [7, 0, 0, 6, 8, 0, 0, 0, 0], [0, 2, 8, 0, 0, 0, 0, 0, 0]];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Board, {\n      children: board.map(row => row.map(num => /*#__PURE__*/_jsxDEV(Cell, {\n        children: \"num\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 25\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SolveBtn, {\n      children: \"Solve\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Solver;\nexport default Solver;\n\nvar _c;\n\n$RefreshReg$(_c, \"Solver\");","map":{"version":3,"sources":["/Users/devinnarula/Documents/GitHub/sudoku-solver/sudoku-solver/src/pages/Solver/solver.js"],"names":["React","Solver","board","grid","map","row","num"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACjB,MAAIC,KAAK,GAAGC,IAAI,GAAG,CACf,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CADe,EAEf,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAFe,EAGf,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAHe,EAIf,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAJe,EAKf,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CALe,EAMf,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CANe,EAOf,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAPe,EAQf,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CARe,EASf,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CATe,CAAnB;AAWA,sBACI;AAAA,4BACI,QAAC,KAAD;AAAA,gBACKD,KAAK,CAACE,GAAN,CAAWC,GAAD,IACPA,GAAG,CAACD,GAAJ,CAASE,GAAD,iBAEJ,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CADH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eASI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA,kBADJ;AAaH,CAzBD;;KAAML,M;AA2BN,eAAeA,MAAf","sourcesContent":["import React from 'react'\n\nconst Solver = () => {\n    let board = grid = [\n        [0, 0, 0, 0, 0, 0, 6, 8, 0],\n        [0, 0, 0, 0, 7, 3, 0, 0, 9],\n        [3, 0, 9, 0, 0, 0, 0, 4, 5],\n        [4, 9, 0, 0, 0, 0, 0, 0, 0],\n        [8, 0, 3, 0, 5, 0, 9, 0, 2],\n        [0, 0, 0, 0, 0, 0, 0, 3, 6],\n        [9, 6, 0, 0, 0, 0, 3, 0, 8],\n        [7, 0, 0, 6, 8, 0, 0, 0, 0],\n        [0, 2, 8, 0, 0, 0, 0, 0, 0]\n    ]\n    return (\n        <>\n            <Board>\n                {board.map((row) => (\n                    row.map((num) => (\n                    \n                        <Cell>num</Cell>\n                    ))\n                ))}\n            </Board>\n            <SolveBtn>Solve</SolveBtn>\n        </>\n    )\n}\n\nexport default Solver\n"]},"metadata":{},"sourceType":"module"}